[package]
name = "fmod-rs"
version = "0.1.0"
edition = "2021"
rust-version = "1.70"
license = "MIT OR Apache-2.0"

publish = false
description = "Bindings to the FMOD adaptive audio solution"
repository = "https://github.com/CAD97/fmod-rs"
keywords = ["gamedev", "audio", "sound", "fmod", "adaptive audio"]
categories = ["api-bindings", "game-development", "multimedia::audio"]

[lib]
name = "fmod"

[features]
default = ["log"]

#! ## Feature flags

## Enable the FMOD Studio API.
studio = ["dep:fmod-studio-sys"]

## Enable the FMOD FSBank API.
fsbank = []

## Enable recording FMOD debug logs using the log crate.
log = ["dep:log"]

## Enable math interoperability via the mint crate.
mint = ["dep:mint"]

## Enable access to the raw FMOD API calls.
raw = []

## Automatically attempt to guess the FMOD Studio API installation path. Will
## panic the build if the conventional path is not known for this host+target
## and the link configuration is not manually specified for `fmod`/`fmodstudio`.
link-search = ["fmod-core-sys/link-search", "fmod-studio-sys?/link-search"]

#! ### Experimental feature flags
#!
#! These features can change public API and can change at any time. Be warned!

## Use unstable Rust features for the safe API. Currently, this means to:
## - Use `feature(extern_type)` for FMOD resource types.
## - Use `feature(doc_auto_cfg, doc_cfg)` to display cfg gates in documentation.
## - Use `feature(read_buf)` to elide some defensively duplicated stack buffers.
## - Use `feature(trait_alias)` for the `ChannelControlCallback` trait alias.
unstable = []

[dependencies]
fmod-core-sys = { version = "2.14", path = "../fmod-core-sys" }
fmod-studio-sys = { version = "2.14", path = "../fmod-studio-sys", optional = true }

cstr8 = "0.1.1"
cool_asserts = "2.0.3"
document-features = "0.2.7"
parking_lot = "0.12.1"
paste = "1.0.12"
smart-default = "0.7.1"

log = { version = "0.4.18", optional = true }
mint = { version = "0.5.9", optional = true }
