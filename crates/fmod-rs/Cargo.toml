[package]
name = "fmod-rs"
version = "0.1.0"
edition = "2021"
rust-version = "1.60"
license = "MIT OR Apache-2.0"

publish = false
description = "Bindings to the FMOD adaptive audio solution"
repository = "https://github.com/CAD97/fmod-rs"
keywords = ["gamedev", "audio", "sound", "fmod", "adaptive audio"]
categories = ["api-bindings", "game-development", "multimedia::audio"]

[lib]
name = "fmod"

[features]
default = ["fmod_debug_is_tracing"]

#! ## Feature flags

## Enable the FMOD Studio API.
studio = ["dep:fmod-studio-sys"]
## Hook FMOD's debug logging to tracing.
fmod_debug_is_tracing = ["tracing"]
## Enable use of tracing in FMOD.rs (implied by `fmod_debug_is_tracing`).
tracing = ["dep:tracing", "dep:once_cell"]
## Enable use of [memory::initialize_rust_global_alloc], which requires that
## `size_of::<std::alloc::Layout>() <= 16`.
rust_alloc_bridge = []

## Enable access to the raw FMOD API calls.
raw = []

#! ### Experimental feature flags
#!
#! These features can change the public API and can change at any time. Be warned!

## Use unstable Rust features for the safe API. Currently, this means to:
## - Use `feature(extern_type)` for FMOD resource types.
## - Use `feature(doc_auto_cfg, doc_cfg)` to display cfg gates in documentation.
unstable = []

[dependencies]
fmod-core-sys = { version = "2.6", path = "../fmod-core-sys" }
fmod-studio-sys = { version = "2.6", path = "../fmod-studio-sys", optional = true }

cfg-if = "1.0.0"
cool_asserts = "1.1.1"
cstr = "0.2.10"
document-features = "0.2.1"
parking_lot = "0.12.0"
paste = "1.0.7"
static_assertions = "1.1.0"

once_cell = { version = "1.10.0", optional = true, features = ["parking_lot"] }
tracing = { version = "0.1.32", optional = true }
smart-default = "0.6.0"
